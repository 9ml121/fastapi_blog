"""add_post_like_and_favorite_tables

Revision ID: a14028f2192b
Revises: 2e3ee01bbf0e
Create Date: 2025-10-20 22:56:29.396188

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a14028f2192b"
down_revision: str | Sequence[str] | None = "2e3ee01bbf0e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "post_favorites",
        sa.Column("id", sa.UUID(), nullable=False, comment="收藏记录唯一标识符"),
        sa.Column("user_id", sa.Uuid(), nullable=True, comment="收藏用户ID"),
        sa.Column("post_id", sa.Uuid(), nullable=False, comment="收藏文章ID"),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="收藏时间",
        ),
        sa.ForeignKeyConstraint(["post_id"], ["posts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "post_id", name="uq_favorites_user_post"),
    )
    op.create_index(
        op.f("ix_post_favorites_post_id"), "post_favorites", ["post_id"], unique=False
    )
    op.create_index(
        op.f("ix_post_favorites_user_id"), "post_favorites", ["user_id"], unique=False
    )
    op.create_table(
        "post_likes",
        sa.Column("id", sa.UUID(), nullable=False, comment="点赞记录唯一标识符"),
        sa.Column(
            "user_id", sa.Uuid(), nullable=True, comment="点赞用户ID（用户删除后为空）"
        ),
        sa.Column("post_id", sa.Uuid(), nullable=False, comment="点赞文章ID"),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="点赞时间",
        ),
        sa.ForeignKeyConstraint(["post_id"], ["posts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "post_id", name="uq_likes_user_post"),
    )
    op.create_index(
        op.f("ix_post_likes_post_id"), "post_likes", ["post_id"], unique=False
    )
    op.create_index(
        op.f("ix_post_likes_user_id"), "post_likes", ["user_id"], unique=False
    )
    op.add_column(
        "posts",
        sa.Column("like_count", sa.Integer(), nullable=False,
                  server_default=sa.text("0"), comment="点赞次数统计"),
    )
    op.add_column(
        "posts",
        sa.Column(
            "favorite_count", sa.Integer(), nullable=False,
            server_default=sa.text("0"), comment="收藏次数统计"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("posts", "favorite_count")
    op.drop_column("posts", "like_count")
    op.drop_index(op.f("ix_post_likes_user_id"), table_name="post_likes")
    op.drop_index(op.f("ix_post_likes_post_id"), table_name="post_likes")
    op.drop_table("post_likes")
    op.drop_index(op.f("ix_post_favorites_user_id"), table_name="post_favorites")
    op.drop_index(op.f("ix_post_favorites_post_id"), table_name="post_favorites")
    op.drop_table("post_favorites")
    # ### end Alembic commands ###
