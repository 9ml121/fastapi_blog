"""Initial migration: create all tables

Revision ID: b9cf7908383e
Revises:
Create Date: 2025-10-04 14:22:03.433399

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'b9cf7908383e'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', sa.Uuid(), nullable=False, comment='标签唯一标识符'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='标签名称（唯一）'),
    sa.Column('slug', sa.String(length=100), nullable=False, comment='URL 友好的标识符'),
    sa.Column('description', sa.Text(), nullable=True, comment='标签描述'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_index(op.f('ix_tags_slug'), 'tags', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False, comment='用户唯一标识'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名（唯一）'),
    sa.Column('email', sa.String(length=100), nullable=False, comment='邮箱地址（唯一）'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='密码哈希值'),
    sa.Column('nickname', sa.String(length=50), nullable=False, comment='显示昵称'),
    sa.Column('avatar', sa.String(length=255), nullable=True, comment='头像文件路径'),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False, comment='用户角色'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='账户是否激活（软删除标记）'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='邮箱是否已验证'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True, comment='最后登录时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('posts',
    sa.Column('id', sa.Uuid(), nullable=False, comment='文章唯一标识'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='文章标题'),
    sa.Column('content', sa.Text(), nullable=False, comment='文章正文内容（Markdown 格式）'),
    sa.Column('summary', sa.String(length=500), nullable=True, comment='文章摘要（用于列表页展示）'),
    sa.Column('slug', sa.String(length=200), nullable=False, comment='URL 友好标识（SEO 优化）'),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='poststatus'), nullable=False, comment='文章状态'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='是否置顶文章'),
    sa.Column('view_count', sa.Integer(), nullable=False, comment='浏览次数统计'),
    sa.Column('author_id', sa.Uuid(), nullable=False, comment='作者用户 ID'),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='发布时间（仅发布后设置）'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_author_id'), 'posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_posts_created_at'), 'posts', ['created_at'], unique=False)
    op.create_index(op.f('ix_posts_is_featured'), 'posts', ['is_featured'], unique=False)
    op.create_index(op.f('ix_posts_published_at'), 'posts', ['published_at'], unique=False)
    op.create_index(op.f('ix_posts_slug'), 'posts', ['slug'], unique=True)
    op.create_index(op.f('ix_posts_status'), 'posts', ['status'], unique=False)
    op.create_index(op.f('ix_posts_title'), 'posts', ['title'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False, comment='评论内容'),
    sa.Column('user_id', sa.Uuid(), nullable=False, comment='评论作者 ID'),
    sa.Column('post_id', sa.Uuid(), nullable=False, comment='所属文章 ID'),
    sa.Column('parent_id', sa.Uuid(), nullable=True, comment='父评论 ID（顶级评论为 None）'),
    sa.Column('is_approved', sa.Boolean(), nullable=False, comment='是否审核通过'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标记'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'tag_id')
    )
    op.create_table('post_views',
    sa.Column('id', sa.Uuid(), nullable=False, comment='浏览记录唯一标识符'),
    sa.Column('user_id', sa.Uuid(), nullable=True, comment='浏览用户ID（NULL表示匿名用户）'),
    sa.Column('post_id', sa.Uuid(), nullable=False, comment='被浏览的文章ID'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='访问者IP地址'),
    sa.Column('user_agent', sa.String(length=500), nullable=True, comment='浏览器User-Agent信息'),
    sa.Column('viewed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='浏览时间'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_post_viewed', 'post_views', ['post_id', 'viewed_at'], unique=False)
    op.create_index('idx_user_viewed', 'post_views', ['user_id', 'viewed_at'], unique=False)
    op.create_index(op.f('ix_post_views_post_id'), 'post_views', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_views_user_id'), 'post_views', ['user_id'], unique=False)
    op.create_index(op.f('ix_post_views_viewed_at'), 'post_views', ['viewed_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_post_views_viewed_at'), table_name='post_views')
    op.drop_index(op.f('ix_post_views_user_id'), table_name='post_views')
    op.drop_index(op.f('ix_post_views_post_id'), table_name='post_views')
    op.drop_index('idx_user_viewed', table_name='post_views')
    op.drop_index('idx_post_viewed', table_name='post_views')
    op.drop_table('post_views')
    op.drop_table('post_tags')
    op.drop_table('comments')
    op.drop_index(op.f('ix_posts_title'), table_name='posts')
    op.drop_index(op.f('ix_posts_status'), table_name='posts')
    op.drop_index(op.f('ix_posts_slug'), table_name='posts')
    op.drop_index(op.f('ix_posts_published_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_is_featured'), table_name='posts')
    op.drop_index(op.f('ix_posts_created_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_author_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_slug'), table_name='tags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    # ### end Alembic commands ###
